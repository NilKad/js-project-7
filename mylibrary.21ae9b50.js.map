{"mappings":"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","sources":["src/js/my-library.js","src/js/firebase-ml.js"],"sourcesContent":["import { createMovieCards } from './moviesMarkup';\n// import { onMovieCardClick } from './moviesGallery';\nimport { modalBasicLightbox } from './modalBasicLightbox';\nimport { localStorageAPI } from './localStorageAPI';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst dbRef = ref(getDatabase());\nconst auth = getAuth();\nlet userId;\nlet userEmail;\nlet getWatched = [];\nlet getQueue = [];\nlet markup = '';\nconst logoutMlBtnEl = document.querySelector('.logout');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('Это обсервер my-library');\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    logoutMlBtnEl.classList.add('visually-hidden');\n  }\n});\n\nconst moviesContainer = document.querySelector('.movies');\nconst watchedBtnEl = document.querySelector('[data-id=\"watched-btn\"');\nconst queueBtnEl = document.querySelector('[data-id=\"queue-btn\"');\nconst myLibraryNavEl = document.querySelector('.header-nav__link--current-header');\nconst localStorageApi = new localStorageAPI();\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n// myLibraryNavEl.addEventListener('click', renderCardsWatched);\n\nfunction renderCardsWatched() {\n  let getWatched = [];\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            localStorage.setItem('watched', JSON.stringify(getWatched));\n            console.log('getWatched', snapshot.val());\n            markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nrenderCardsWatched();\n\nfunction onWatchedBtnClick() {\n  moviesContainer.removeEventListener('click', onQueueMovieCardClick);\n\n  if (watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nfunction onQueueBtnClick() {\n  moviesContainer.removeEventListener('click', onWatchedMovieCardClick);\n\n  if (!watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}queue/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getQueue = snapshot.val();\n            console.log('getQueue', snapshot.val());\n            markup = createMovieCards(getQueue);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onQueueMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Queue</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      const getQueue = localStorageApi.getData('queue');\n      markup = createMovieCards(getQueue);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onQueueMovieCardClick);\n    }\n  });\n}\n\nfunction onWatchedMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('watched');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'watched');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onQueueMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('queue');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'queue');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\nimport {\n  registrationForm,\n  registrationFormName,\n  registrationFormEmail,\n  registrationFormPassword,\n  registrationFormSubmit,\n  loginForm,\n  loginFormName,\n  loginFormEmail,\n  loginFormPassword,\n  onCloseModal,\n  closeOnSubmit,\n} from '/src/js/modals/modal-auth.js';\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nconst logoutMlBtnEl = document.querySelector('.logout');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nlet userId;\nlet userEmail;\nlet email;\nlet password;\n\nconsole.log('firebase-ml is running');\n// обсервер текущего пользователя\nconst welcome = document.querySelector('.welcome-ml');\nconst login = document.querySelector('.login');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('current user = ', userEmail);\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    login.classList.add('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    login.classList.remove('visually-hidden');\n  }\n});\n\n//регистрация новых пользователей\nregistrationFormSubmit.addEventListener('click', onRegistrationSubmit);\n\nfunction onRegistrationSubmit(event) {\n  event.preventDefault();\n  // const name = registrationFormName.value;\n  const email = registrationFormEmail.value;\n  console.log(email);\n  const password = registrationFormPassword.value;\n  console.log(password);\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      // set(ref(database, 'users/' + user.uid), {\n      //   email: email,\n      //   displayName: email,\n      // });\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      // ..\n    });\n  registrationForm.reset();\n  closeOnSubmit();\n}\n\n//авторизация существующих хользователей\nloginForm.addEventListener('submit', onLoginSubmit);\n\nfunction onLoginSubmit(event) {\n  event.preventDefault();\n  localStorage.removeItem('watched');\n  localStorage.removeItem('queue');\n  const email = loginFormEmail.value;\n  const password = loginFormPassword.value;\n\n  signInWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      window.location.reload();\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n\n  loginForm.reset();\n  closeOnSubmit();\n}\n\n//логаут\n\nlogoutMlBtnEl.addEventListener('click', logOutMl);\n\nfunction logOutMl() {\n  signOut(auth)\n    .then(() => {\n      userEmail = null;\n      window.location.reload();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$aTzrc","parcelRequire","$bb2af86579234925$var$userId","$bb2af86579234925$var$userEmail","$bb2af86579234925$var$app","$6Urw1","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$bb2af86579234925$var$dbRef","$6Nu6u","getDatabase","ref","$bb2af86579234925$var$auth","$3SEMc","getAuth","$bb2af86579234925$var$getWatched","$bb2af86579234925$var$getQueue","$bb2af86579234925$var$markup","$bb2af86579234925$var$logoutMlBtnEl","document","querySelector","$bb2af86579234925$var$welcomeMl","onAuthStateChanged","user","uid","email","console","log","classList","remove","innerHTML","concat","add","getWatched1","$bb2af86579234925$var$moviesContainer","$bb2af86579234925$var$watchedBtnEl","$bb2af86579234925$var$queueBtnEl","$bb2af86579234925$var$localStorageApi","$6fJbC","localStorageAPI","$bb2af86579234925$var$onWatchedMovieCardClick","e","targetFilm","target","closest","dataset","id","nodeName","genres","movies","getData","parsedGenres","film","filter","param","Number","genre_ids","includes","map","name","setData","$g2YN6","modalBasicLightbox","addListenersToBtns","error","message","$bb2af86579234925$var$onQueueMovieCardClick","addEventListener","removeEventListener","contains","get","child","then","snapshot","exists","val","createMovieCards","catch","getQueue1","localStorage","setItem","JSON","stringify","$cece4c1cb9f0c61b$var$userEmail","$cece4c1cb9f0c61b$var$app","$cece4c1cb9f0c61b$var$auth","$cece4c1cb9f0c61b$var$logoutMlBtnEl","$cece4c1cb9f0c61b$var$welcomeMl","$cece4c1cb9f0c61b$var$login","$8uW00","registrationFormSubmit","event","preventDefault","email1","registrationFormEmail","value","password1","registrationFormPassword","createUserWithEmailAndPassword","userCredential","errorCode","code","errorMessage","registrationForm","reset","closeOnSubmit","loginForm","removeItem","email2","loginFormEmail","password2","loginFormPassword","signInWithEmailAndPassword","window","location","reload","signOut"],"version":3,"file":"mylibrary.21ae9b50.js.map"}