{"mappings":"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","sources":["src/js/my-library.js","src/js/firebase-ml.js"],"sourcesContent":["import { createMovieCards } from './moviesMarkup';\n// import { onMovieCardClick } from './moviesGallery';\nimport { modalBasicLightbox } from './modalBasicLightbox';\nimport { localStorageAPI } from './localStorageAPI';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nconst moviesContainer = document.querySelector('.movies');\nconst watchedBtnEl = document.querySelector('[data-id=\"watched-btn\"');\nconst queueBtnEl = document.querySelector('[data-id=\"queue-btn\"');\nconst myLibraryNavEl = document.querySelector(\n  '.header-nav__link--current-header'\n);\nconst localStorageApi = new localStorageAPI();\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n// myLibraryNavEl.addEventListener('click', renderCardsWatched);\n\nfunction renderCardsWatched() {\n  console.log('is running');\n  const getWatched = localStorageApi.getData('watched');\n  const markup = createMovieCards(getWatched);\n  moviesContainer.innerHTML = markup;\n  moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n}\n\nrenderCardsWatched();\n\nfunction onWatchedBtnClick() {\n  moviesContainer.removeEventListener('click', onQueueMovieCardClick);\n\n  if (watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  const getWatched = localStorageApi.getData('watched');\n  const markup = createMovieCards(getWatched);\n  moviesContainer.innerHTML = markup;\n  moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n}\n\nfunction onQueueBtnClick() {\n  moviesContainer.removeEventListener('click', onWatchedMovieCardClick);\n\n  if (!watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  const getQueue = localStorageApi.getData('queue');\n  const markup = createMovieCards(getQueue);\n  moviesContainer.innerHTML = markup;\n  moviesContainer.addEventListener('click', onQueueMovieCardClick);\n}\n\nfunction onWatchedMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    console.log('onWatchedMovieCardClick is running');\n    const movies = localStorageApi.getData('watched');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres\n        .filter(({ id }) => genre_ids.includes(id))\n        .map(({ name }) => name);\n    }\n    film.genres = genres;\n    console.log(film, 'film');\n    console.log(movies, 'movies');\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film);\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onQueueMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    console.log('onQueueMovieCardClick is running');\n\n    const movies = localStorageApi.getData('queue');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres\n        .filter(({ id }) => genre_ids.includes(id))\n        .map(({ name }) => name);\n    }\n    film.genres = genres;\n    console.log(film, 'film');\n    console.log(movies, 'movies');\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film);\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nconst logoutMlBtnEl = document.querySelector('#logout-ml');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nlet userId;\nlet userEmail;\nlet email;\nlet password;\n\n// обсервер текущего пользователя\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('current user = ', userEmail);\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    console.log('Не авторизован');\n    logoutMlBtnEl.classList.add('visually-hidden');\n  }\n});\n\n//логаут\n\nlogoutMlBtnEl.addEventListener('click', logOutMl);\n\nfunction logOutMl() {\n  signOut(auth)\n    .then(() => {\n      userEmail = null;\n      window.location.reload();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$aTzrc","parcelRequire","$bb2af86579234925$var$moviesContainer","document","querySelector","$bb2af86579234925$var$watchedBtnEl","$bb2af86579234925$var$queueBtnEl","$bb2af86579234925$var$localStorageApi","$6fJbC","localStorageAPI","$bb2af86579234925$var$onWatchedMovieCardClick","e","targetFilm","target","closest","dataset","id","nodeName","console","log","genres","movies","getData","parsedGenres","film","filter","param","Number","genre_ids","includes","map","name","setData","$g2YN6","modalBasicLightbox","addListenersToBtns","error","message","$bb2af86579234925$var$onQueueMovieCardClick","addEventListener","removeEventListener","classList","contains","getWatched","markup","createMovieCards","innerHTML","getQueue","$bb2af86579234925$var$renderCardsWatched","$cece4c1cb9f0c61b$var$userEmail","$6Urw1","$cece4c1cb9f0c61b$var$app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$cece4c1cb9f0c61b$var$auth","$6Nu6u","getDatabase","$3SEMc","getAuth","$cece4c1cb9f0c61b$var$logoutMlBtnEl","$cece4c1cb9f0c61b$var$welcomeMl","onAuthStateChanged","user","uid","email","remove","concat","add","signOut","then","window","location","reload","catch"],"version":3,"file":"mylibrary.28af4131.js.map"}