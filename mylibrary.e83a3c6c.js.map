{"mappings":"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","sources":["src/js/my-library.js","src/js/firebase-ml.js"],"sourcesContent":["import { createMovieCards } from './moviesMarkup';\n// import { onMovieCardClick } from './moviesGallery';\nimport { modalBasicLightbox } from './modalBasicLightbox';\nimport { localStorageAPI } from './localStorageAPI';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst dbRef = ref(getDatabase());\nconst auth = getAuth();\nlet userId;\nlet userEmail;\nconst logoutMlBtnEl = document.querySelector('#logout-ml');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('Это обсервер my-library');\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    logoutMlBtnEl.classList.add('visually-hidden');\n  }\n});\n\nconst moviesContainer = document.querySelector('.movies');\nconst watchedBtnEl = document.querySelector('[data-id=\"watched-btn\"');\nconst queueBtnEl = document.querySelector('[data-id=\"queue-btn\"');\nconst myLibraryNavEl = document.querySelector('.header-nav__link--current-header');\nconst localStorageApi = new localStorageAPI();\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n// myLibraryNavEl.addEventListener('click', renderCardsWatched);\n\nfunction renderCardsWatched() {\n  let getWatched = [];\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            localStorage.setItem('watched', JSON.stringify(getWatched));\n            console.log('getWatched', snapshot.val());\n            const markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      const markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nrenderCardsWatched();\n\nfunction onWatchedBtnClick() {\n  let markup = '';\n  moviesContainer.removeEventListener('click', onQueueMovieCardClick);\n\n  if (watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      const markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nfunction onQueueBtnClick() {\n  moviesContainer.removeEventListener('click', onWatchedMovieCardClick);\n\n  if (!watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}queue/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getQueue = snapshot.val();\n            console.log('getQueue', snapshot.val());\n            const markup = createMovieCards(getQueue);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onQueueMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Queue</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      const getQueue = localStorageApi.getData('queue');\n      const markup = createMovieCards(getQueue);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onQueueMovieCardClick);\n    }\n  });\n}\n\nfunction onWatchedMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('watched');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'watched');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onQueueMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('queue');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'queue');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nconst logoutMlBtnEl = document.querySelector('#logout-ml');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nlet userId;\nlet userEmail;\nlet email;\nlet password;\n\n// обсервер текущего пользователя\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('current user = ', userEmail);\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    logoutMlBtnEl.classList.add('visually-hidden');\n  }\n});\n\n//логаут\n\nlogoutMlBtnEl.addEventListener('click', logOutMl);\n\nfunction logOutMl() {\n  signOut(auth)\n    .then(() => {\n      userEmail = null;\n      window.location.reload();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$aTzrc","parcelRequire","$bb2af86579234925$var$userId","$bb2af86579234925$var$userEmail","$bb2af86579234925$var$app","$6Urw1","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$bb2af86579234925$var$dbRef","$6Nu6u","getDatabase","ref","$bb2af86579234925$var$auth","$3SEMc","getAuth","$bb2af86579234925$var$logoutMlBtnEl","document","querySelector","$bb2af86579234925$var$welcomeMl","onAuthStateChanged","user","uid","email","console","log","classList","remove","innerHTML","concat","add","$bb2af86579234925$var$moviesContainer","$bb2af86579234925$var$watchedBtnEl","$bb2af86579234925$var$queueBtnEl","$bb2af86579234925$var$localStorageApi","$6fJbC","localStorageAPI","$bb2af86579234925$var$onWatchedMovieCardClick","e","targetFilm","target","closest","dataset","id","nodeName","genres","movies","getData","parsedGenres","film","filter","param","Number","genre_ids","includes","map","name","setData","$g2YN6","modalBasicLightbox","addListenersToBtns","error","message","$bb2af86579234925$var$onQueueMovieCardClick","addEventListener","markup","removeEventListener","contains","get","child","then","snapshot","exists","getWatched","val","createMovieCards","catch","markup2","getQueue","_$markup","getQueue1","markup3","localStorage","setItem","JSON","stringify","markup1","$bb2af86579234925$var$renderCardsWatched","$cece4c1cb9f0c61b$var$userEmail","$cece4c1cb9f0c61b$var$app","$cece4c1cb9f0c61b$var$auth","$cece4c1cb9f0c61b$var$logoutMlBtnEl","$cece4c1cb9f0c61b$var$welcomeMl","signOut","window","location","reload"],"version":3,"file":"mylibrary.e83a3c6c.js.map"}