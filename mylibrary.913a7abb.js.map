{"mappings":"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","sources":["src/js/my-library.js","src/js/firebase-ml.js"],"sourcesContent":["import { createMovieCards } from './moviesMarkup';\n// import { onMovieCardClick } from './moviesGallery';\nimport { modalBasicLightbox } from './modalBasicLightbox';\nimport { localStorageAPI } from './localStorageAPI';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst dbRef = ref(getDatabase());\nconst auth = getAuth();\nlet userId;\nlet userEmail;\nlet getWatched = [];\nlet getQueue = [];\nlet markup = '';\nconst logoutMlBtnEl = document.querySelector('.logout');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('Это обсервер my-library');\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    logoutMlBtnEl.classList.add('visually-hidden');\n  }\n});\n\nconst moviesContainer = document.querySelector('.movies');\nconst watchedBtnEl = document.querySelector('[data-id=\"watched-btn\"');\nconst queueBtnEl = document.querySelector('[data-id=\"queue-btn\"');\nconst myLibraryNavEl = document.querySelector('.header-nav__link--current-header');\nconst localStorageApi = new localStorageAPI();\n\nwatchedBtnEl.addEventListener('click', onWatchedBtnClick);\nqueueBtnEl.addEventListener('click', onQueueBtnClick);\n// myLibraryNavEl.addEventListener('click', renderCardsWatched);\n\nfunction renderCardsWatched() {\n  let getWatched = [];\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            localStorage.setItem('watched', JSON.stringify(getWatched));\n            console.log('getWatched', snapshot.val());\n            markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n      get(child(dbRef, `users/${userId}queue/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getQueue = snapshot.val();\n            localStorage.setItem('queue', JSON.stringify(getQueue));\n            console.log('getQueue', snapshot.val());\n            markup = createMovieCards(getQueue);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nrenderCardsWatched();\n\nfunction onWatchedBtnClick() {\n  moviesContainer.removeEventListener('click', onQueueMovieCardClick);\n\n  if (watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}watched/watched`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = createMovieCards(getWatched);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Watched</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      getWatched = localStorageApi.getData('watched');\n      markup = createMovieCards(getWatched);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n    }\n  });\n}\n\nfunction onQueueBtnClick() {\n  moviesContainer.removeEventListener('click', onWatchedMovieCardClick);\n\n  if (!watchedBtnEl.classList.contains('is-active')) {\n    return;\n  }\n  onAuthStateChanged(auth, user => {\n    if (user) {\n      userId = user.uid;\n      userEmail = user.email;\n      get(child(dbRef, `users/${userId}queue/queue`))\n        .then(snapshot => {\n          if (snapshot.exists()) {\n            getQueue = snapshot.val();\n            console.log('getQueue', snapshot.val());\n            markup = createMovieCards(getQueue);\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onQueueMovieCardClick);\n          } else {\n            console.log('No data available');\n            getWatched = snapshot.val();\n            console.log('getWatched', snapshot.val());\n            markup = `<div><p>ЗАГЛУШКА Queue</p></div>`;\n            moviesContainer.innerHTML = markup;\n            moviesContainer.addEventListener('click', onWatchedMovieCardClick);\n          }\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    } else {\n      const getQueue = localStorageApi.getData('queue');\n      markup = createMovieCards(getQueue);\n      moviesContainer.innerHTML = markup;\n      moviesContainer.addEventListener('click', onQueueMovieCardClick);\n    }\n  });\n}\n\nfunction onWatchedMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('watched');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'watched');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nfunction onQueueMovieCardClick(e) {\n  const targetFilm = e.target.closest('li').dataset.id;\n  if (e.target.nodeName === 'UL') {\n    return;\n  }\n\n  try {\n    const movies = localStorageApi.getData('queue');\n    const parsedGenres = localStorageApi.getData('genresList');\n    const film = movies.filter(({ id }) => id === Number(targetFilm))[0];\n    const { genre_ids } = film;\n    let genres;\n    if (genre_ids) {\n      genres = parsedGenres.filter(({ id }) => genre_ids.includes(id)).map(({ name }) => name);\n    }\n    film.genres = genres;\n\n    localStorageApi.setData('current-film', film);\n\n    modalBasicLightbox(film, 'queue');\n    localStorageApi.addListenersToBtns();\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n","import { initializeApp } from 'firebase/app';\nimport { getDatabase, set, ref, update, get, onValue, child, remove } from 'firebase/database';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  signOut,\n  getAdditionalUserInfo,\n} from 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCI5JTbKtHIHNuS4WcbgMfz2S8WxJp_ehM',\n  authDomain: 'filmoteka-proj-7.firebaseapp.com',\n  databaseURL: 'https://filmoteka-proj-7-default-rtdb.europe-west1.firebasedatabase.app/',\n  projectId: 'filmoteka-proj-7',\n  storageBucket: 'filmoteka-proj-7.appspot.com',\n  messagingSenderId: '181528100082',\n  appId: '1:181528100082:web:031dd9add36023a4e5e46b',\n  measurementId: 'G-1X27T2N03L',\n};\nimport {\n  registrationForm,\n  registrationFormName,\n  registrationFormEmail,\n  registrationFormPassword,\n  registrationFormSubmit,\n  loginForm,\n  loginFormName,\n  loginFormEmail,\n  loginFormPassword,\n  onCloseModal,\n  closeOnSubmit,\n} from '/src/js/modals/modal-auth.js';\n\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\nconst auth = getAuth();\n\nconst logoutMlBtnEl = document.querySelector('.logout');\nconst welcomeMl = document.querySelector('.welcome-ml');\n\nlet userId;\nlet userEmail;\nlet email;\nlet password;\n\nconsole.log('firebase-ml is running');\n// обсервер текущего пользователя\nconst welcome = document.querySelector('.welcome-ml');\nconst login = document.querySelector('.login');\n\nonAuthStateChanged(auth, user => {\n  if (user) {\n    userId = user.uid;\n    userEmail = user.email;\n    console.log('current user = ', userEmail);\n    logoutMlBtnEl.classList.remove('visually-hidden');\n    login.classList.add('visually-hidden');\n    welcomeMl.innerHTML = `Welcome, ${userEmail}!`;\n  } else {\n    login.classList.remove('visually-hidden');\n  }\n});\n\n//регистрация новых пользователей\nregistrationFormSubmit.addEventListener('click', onRegistrationSubmit);\n\nfunction onRegistrationSubmit(event) {\n  event.preventDefault();\n  // const name = registrationFormName.value;\n  const email = registrationFormEmail.value;\n  console.log(email);\n  const password = registrationFormPassword.value;\n  console.log(password);\n  createUserWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      // set(ref(database, 'users/' + user.uid), {\n      //   email: email,\n      //   displayName: email,\n      // });\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(errorCode);\n      console.log(errorMessage);\n      // ..\n    });\n  registrationForm.reset();\n  closeOnSubmit();\n}\n\n//авторизация существующих хользователей\nloginForm.addEventListener('submit', onLoginSubmit);\n\nfunction onLoginSubmit(event) {\n  event.preventDefault();\n  localStorage.removeItem('watched');\n  localStorage.removeItem('queue');\n  const email = loginFormEmail.value;\n  const password = loginFormPassword.value;\n\n  signInWithEmailAndPassword(auth, email, password)\n    .then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      window.location.reload();\n      // ...\n    })\n    .catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n    });\n\n  loginForm.reset();\n  closeOnSubmit();\n}\n\n//логаут\n\nlogoutMlBtnEl.addEventListener('click', logOutMl);\n\nfunction logOutMl() {\n  signOut(auth)\n    .then(() => {\n      userEmail = null;\n      window.location.reload();\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n"],"names":["$2ySY5","parcelRequire","$085d2f9f3e302aeb$var$app","$25RCP","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","$085d2f9f3e302aeb$var$dbRef","$fQ3Fn","getDatabase","ref","$085d2f9f3e302aeb$var$auth","$amyG6","getAuth","$085d2f9f3e302aeb$var$userId","$085d2f9f3e302aeb$var$userEmail","$085d2f9f3e302aeb$var$getWatched","$085d2f9f3e302aeb$var$getQueue","$085d2f9f3e302aeb$var$markup","$085d2f9f3e302aeb$var$logoutMlBtnEl","document","querySelector","$085d2f9f3e302aeb$var$welcomeMl","onAuthStateChanged","user","uid","email","console","log","classList","remove","innerHTML","add","$085d2f9f3e302aeb$var$moviesContainer","$085d2f9f3e302aeb$var$watchedBtnEl","$085d2f9f3e302aeb$var$queueBtnEl","$085d2f9f3e302aeb$var$localStorageApi","$kLGAr","localStorageAPI","$085d2f9f3e302aeb$var$onWatchedMovieCardClick","e","targetFilm","target","closest","dataset","id","nodeName","movies","getData","parsedGenres","film","filter","Number","genre_ids","genres","includes","map","name","setData","$dARph","modalBasicLightbox","addListenersToBtns","error","message","$085d2f9f3e302aeb$var$onQueueMovieCardClick","addEventListener","removeEventListener","contains","get","child","then","snapshot","exists","val","createMovieCards","catch","getQueue1","getWatched1","localStorage","setItem","JSON","stringify","$085d2f9f3e302aeb$var$renderCardsWatched","$3d59d4c6391683c8$var$app","$3d59d4c6391683c8$var$auth","$3d59d4c6391683c8$var$logoutMlBtnEl","$3d59d4c6391683c8$var$welcomeMl","$3d59d4c6391683c8$var$userId","$3d59d4c6391683c8$var$userEmail","$3d59d4c6391683c8$var$login","$6pjkE","registrationFormSubmit","event","preventDefault","email1","registrationFormEmail","value","password1","registrationFormPassword","createUserWithEmailAndPassword","userCredential","errorCode","code","errorMessage","registrationForm","reset","closeOnSubmit","loginForm","removeItem","email2","loginFormEmail","password2","loginFormPassword","signInWithEmailAndPassword","window","location","reload","signOut"],"version":3,"file":"mylibrary.913a7abb.js.map"}